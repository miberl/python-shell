# Generated from Commands.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,14,90,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,
        7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,1,0,1,0,1,
        1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,
        9,1,9,1,10,1,10,1,11,1,11,1,11,1,11,3,11,66,8,11,1,12,4,12,69,8,
        12,11,12,12,12,70,1,13,4,13,74,8,13,11,13,12,13,75,1,14,1,14,1,15,
        1,15,1,16,1,16,1,17,1,17,1,18,4,18,87,8,18,11,18,12,18,88,1,88,0,
        19,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,0,17,0,19,0,21,0,23,0,25,8,27,
        9,29,10,31,11,33,12,35,13,37,14,1,0,7,1,0,97,122,1,0,65,90,1,0,48,
        57,3,0,44,47,92,92,95,95,2,0,9,9,32,32,3,0,10,10,13,13,39,39,3,0,
        10,10,13,13,34,34,90,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,
        0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,25,1,0,0,0,0,27,1,0,
        0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,
        0,0,1,39,1,0,0,0,3,41,1,0,0,0,5,43,1,0,0,0,7,45,1,0,0,0,9,47,1,0,
        0,0,11,49,1,0,0,0,13,51,1,0,0,0,15,53,1,0,0,0,17,55,1,0,0,0,19,57,
        1,0,0,0,21,59,1,0,0,0,23,65,1,0,0,0,25,68,1,0,0,0,27,73,1,0,0,0,
        29,77,1,0,0,0,31,79,1,0,0,0,33,81,1,0,0,0,35,83,1,0,0,0,37,86,1,
        0,0,0,39,40,5,10,0,0,40,2,1,0,0,0,41,42,5,59,0,0,42,4,1,0,0,0,43,
        44,5,124,0,0,44,6,1,0,0,0,45,46,5,60,0,0,46,8,1,0,0,0,47,48,5,62,
        0,0,48,10,1,0,0,0,49,50,5,42,0,0,50,12,1,0,0,0,51,52,5,96,0,0,52,
        14,1,0,0,0,53,54,7,0,0,0,54,16,1,0,0,0,55,56,7,1,0,0,56,18,1,0,0,
        0,57,58,7,2,0,0,58,20,1,0,0,0,59,60,7,3,0,0,60,22,1,0,0,0,61,66,
        3,15,7,0,62,66,3,17,8,0,63,66,3,19,9,0,64,66,3,21,10,0,65,61,1,0,
        0,0,65,62,1,0,0,0,65,63,1,0,0,0,65,64,1,0,0,0,66,24,1,0,0,0,67,69,
        3,23,11,0,68,67,1,0,0,0,69,70,1,0,0,0,70,68,1,0,0,0,70,71,1,0,0,
        0,71,26,1,0,0,0,72,74,7,4,0,0,73,72,1,0,0,0,74,75,1,0,0,0,75,73,
        1,0,0,0,75,76,1,0,0,0,76,28,1,0,0,0,77,78,5,39,0,0,78,30,1,0,0,0,
        79,80,5,34,0,0,80,32,1,0,0,0,81,82,8,5,0,0,82,34,1,0,0,0,83,84,8,
        6,0,0,84,36,1,0,0,0,85,87,9,0,0,0,86,85,1,0,0,0,87,88,1,0,0,0,88,
        89,1,0,0,0,88,86,1,0,0,0,89,38,1,0,0,0,5,0,65,70,75,88,0
    ]

class CommandsLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    WORD = 8
    WHITESPACE = 9
    SINGLEQUOTE = 10
    DOUBLEQUOTE = 11
    SINGLEQUOTECHAR = 12
    DOUBLEQUOTECHAR = 13
    OTHER = 14

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'\\n'", "';'", "'|'", "'<'", "'>'", "'*'", "'`'", "'''", "'\"'" ]

    symbolicNames = [ "<INVALID>",
            "WORD", "WHITESPACE", "SINGLEQUOTE", "DOUBLEQUOTE", "SINGLEQUOTECHAR", 
            "DOUBLEQUOTECHAR", "OTHER" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "LOWER", "UPPER", "NUMBER", "PUNCT", "ALPHANUM", "WORD", 
                  "WHITESPACE", "SINGLEQUOTE", "DOUBLEQUOTE", "SINGLEQUOTECHAR", 
                  "DOUBLEQUOTECHAR", "OTHER" ]

    grammarFileName = "Commands.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


