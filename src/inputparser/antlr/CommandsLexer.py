# Generated from Commands.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,13,89,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,
        7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,1,0,1,0,1,1,1,1,1,2,
        1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,
        1,10,1,11,1,11,1,11,1,11,3,11,64,8,11,1,12,4,12,67,8,12,11,12,12,
        12,68,1,13,4,13,72,8,13,11,13,12,13,73,1,14,1,14,1,15,1,15,1,16,
        4,16,81,8,16,11,16,12,16,82,1,17,4,17,86,8,17,11,17,12,17,87,1,87,
        0,18,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,0,17,0,19,0,21,0,23,0,25,8,
        27,9,29,10,31,11,33,12,35,13,1,0,6,1,0,97,122,1,0,65,90,1,0,48,57,
        3,0,44,47,92,92,95,95,2,0,9,9,32,32,10,0,9,10,13,13,32,32,34,34,
        39,39,42,42,59,60,62,62,96,96,124,124,90,0,1,1,0,0,0,0,3,1,0,0,0,
        0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,
        25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,
        35,1,0,0,0,1,37,1,0,0,0,3,39,1,0,0,0,5,41,1,0,0,0,7,43,1,0,0,0,9,
        45,1,0,0,0,11,47,1,0,0,0,13,49,1,0,0,0,15,51,1,0,0,0,17,53,1,0,0,
        0,19,55,1,0,0,0,21,57,1,0,0,0,23,63,1,0,0,0,25,66,1,0,0,0,27,71,
        1,0,0,0,29,75,1,0,0,0,31,77,1,0,0,0,33,80,1,0,0,0,35,85,1,0,0,0,
        37,38,5,10,0,0,38,2,1,0,0,0,39,40,5,59,0,0,40,4,1,0,0,0,41,42,5,
        124,0,0,42,6,1,0,0,0,43,44,5,60,0,0,44,8,1,0,0,0,45,46,5,62,0,0,
        46,10,1,0,0,0,47,48,5,42,0,0,48,12,1,0,0,0,49,50,5,96,0,0,50,14,
        1,0,0,0,51,52,7,0,0,0,52,16,1,0,0,0,53,54,7,1,0,0,54,18,1,0,0,0,
        55,56,7,2,0,0,56,20,1,0,0,0,57,58,7,3,0,0,58,22,1,0,0,0,59,64,3,
        15,7,0,60,64,3,17,8,0,61,64,3,19,9,0,62,64,3,21,10,0,63,59,1,0,0,
        0,63,60,1,0,0,0,63,61,1,0,0,0,63,62,1,0,0,0,64,24,1,0,0,0,65,67,
        3,23,11,0,66,65,1,0,0,0,67,68,1,0,0,0,68,66,1,0,0,0,68,69,1,0,0,
        0,69,26,1,0,0,0,70,72,7,4,0,0,71,70,1,0,0,0,72,73,1,0,0,0,73,71,
        1,0,0,0,73,74,1,0,0,0,74,28,1,0,0,0,75,76,5,39,0,0,76,30,1,0,0,0,
        77,78,5,34,0,0,78,32,1,0,0,0,79,81,8,5,0,0,80,79,1,0,0,0,81,82,1,
        0,0,0,82,80,1,0,0,0,82,83,1,0,0,0,83,34,1,0,0,0,84,86,9,0,0,0,85,
        84,1,0,0,0,86,87,1,0,0,0,87,88,1,0,0,0,87,85,1,0,0,0,88,36,1,0,0,
        0,6,0,63,68,73,82,87,0
    ]

class CommandsLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    WORD = 8
    WHITESPACE = 9
    SINGLEQUOTE = 10
    DOUBLEQUOTE = 11
    QUOTEWORD = 12
    OTHER = 13

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'\\n'", "';'", "'|'", "'<'", "'>'", "'*'", "'`'", "'''", "'\"'" ]

    symbolicNames = [ "<INVALID>",
            "WORD", "WHITESPACE", "SINGLEQUOTE", "DOUBLEQUOTE", "QUOTEWORD", 
            "OTHER" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "LOWER", "UPPER", "NUMBER", "PUNCT", "ALPHANUM", "WORD", 
                  "WHITESPACE", "SINGLEQUOTE", "DOUBLEQUOTE", "QUOTEWORD", 
                  "OTHER" ]

    grammarFileName = "Commands.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


